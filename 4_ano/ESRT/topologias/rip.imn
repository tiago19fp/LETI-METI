node n1 {
    type router
    model router
    network-config {
	hostname R1
	!
	interface eth3
	 ip address 10.0.1.1/29
	!
	interface eth2
	 ip address 192.168.0.9/30
	!
	interface eth1
	 ip address 192.168.0.5/30
	!
	interface eth0
	 ip address 192.168.0.2/30
	!
    }
    canvas c1
    iconcoords {303.0 310.0}
    labelcoords {305.0 291.0}
    interface-peer {eth0 n5}
    interface-peer {eth1 n2}
    interface-peer {eth2 n4}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/vtysh.conf
	custom-command /usr/local/etc/quagga/vtysh.conf
	config {
	service integrated-vtysh-config
	
	}
    }
    custom-config {
	custom-config-id service:zebra:quaggaboot.sh
	custom-command quaggaboot.sh
	config {
	#!/bin/sh
	# auto-generated by zebra service (quagga.py)
	QUAGGA_CONF=/usr/local/etc/quagga/Quagga.conf
	QUAGGA_SBIN_SEARCH="/usr/local/sbin /usr/sbin /usr/lib/quagga"
	QUAGGA_BIN_SEARCH="/usr/local/bin /usr/bin /usr/lib/quagga"
	QUAGGA_STATE_DIR=/var/run/quagga
	
	searchforprog()
	{
	    prog=$1
	    searchpath=$@
	    ret=
	    for p in $searchpath; do
	        if [ -x $p/$prog ]; then
	            ret=$p
	            break
	        fi
	    done
	    echo $ret
	}
	
	confcheck()
	{
	    CONF_DIR=`dirname $QUAGGA_CONF`
	    # if /etc/quagga exists, point /etc/quagga/Quagga.conf -> CONF_DIR
	    if [ "$CONF_DIR" != "/etc/quagga" ] && [ -d /etc/quagga ] && [ ! -e /etc/quagga/Quagga.conf ]; then
	        ln -s $CONF_DIR/Quagga.conf /etc/quagga/Quagga.conf
	    fi
	    # if /etc/quagga exists, point /etc/quagga/vtysh.conf -> CONF_DIR
	    if [ "$CONF_DIR" != "/etc/quagga" ] && [ -d /etc/quagga ] && [ ! -e /etc/quagga/vtysh.conf ]; then
	        ln -s $CONF_DIR/vtysh.conf /etc/quagga/vtysh.conf
	    fi
	}
	
	bootdaemon()
	{
	    QUAGGA_SBIN_DIR=$(searchforprog $1 $QUAGGA_SBIN_SEARCH)
	    if [ "z$QUAGGA_SBIN_DIR" = "z" ]; then
	        echo "ERROR: Quagga's '$1' daemon not found in search path:"
	        echo "  $QUAGGA_SBIN_SEARCH"
	        return 1
	    fi
	
	    flags=""
	
	    if [ "$1" = "xpimd" ] && \
	        grep -E -q '^[[:space:]]*router[[:space:]]+pim6[[:space:]]*$' $QUAGGA_CONF; then
	        flags="$flags -6"
	    fi
	
	    $QUAGGA_SBIN_DIR/$1 $flags -d
	    if [ "$?" != "0" ]; then
	        echo "ERROR: Quagga's '$1' daemon failed to start!:"
	        return 1
	    fi
	}
	
	bootquagga()
	{
	    QUAGGA_BIN_DIR=$(searchforprog 'vtysh' $QUAGGA_BIN_SEARCH)
	    if [ "z$QUAGGA_BIN_DIR" = "z" ]; then
	        echo "ERROR: Quagga's 'vtysh' program not found in search path:"
	        echo "  $QUAGGA_BIN_SEARCH"
	        return 1
	    fi
	
	    # fix /var/run/quagga permissions
	    id -u quagga 2>/dev/null >/dev/null
	    if [ "$?" = "0" ]; then
	        chown quagga $QUAGGA_STATE_DIR
	    fi
	
	    bootdaemon "zebra"
	    for r in rip ripng ospf6 ospf bgp babel; do
	        if grep -q "^router \<${r}\>" $QUAGGA_CONF; then
	            bootdaemon "${r}d"
	        fi
	    done
	
	    if grep -E -q '^[[:space:]]*router[[:space:]]+pim6?[[:space:]]*$' $QUAGGA_CONF; then
	        bootdaemon "xpimd"
	    fi
	
	    $QUAGGA_BIN_DIR/vtysh -b
	}
	
	if [ "$1" != "zebra" ]; then
	    echo "WARNING: '$1': all Quagga daemons are launched by the 'zebra' service!"
	    exit 1
	fi
	confcheck
	bootquagga
	
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.0.2/30
	!
	interface eth1
	  ip address 192.168.0.5/30
	!
	interface eth2
	  ip address 192.168.0.9/30
	!
	interface eth3
	  ip address 10.0.1.0/29
	!
	router rip
	  neighbor 192.168.0.1 
	  neighbor 192.168.0.6 
	  neighbor 192.168.0.10 
	  network 10.0.1.0/29
	!
	
	
	}
    }
    services {RIP zebra DefaultRoute IPForward}
    interface-peer {eth3 n11}
}

node n2 {
    type router
    model router
    network-config {
	hostname R2
	!
	interface eth1
	 ip address 192.168.0.13/30
	!
	interface eth0
	 ip address 192.168.0.6/30
	!
    }
    canvas c1
    iconcoords {197.0 409.0}
    labelcoords {159.0 420.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n3}
    services {RIP zebra DefaultRoute IPForward}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.0.6/30
	!
	interface eth1
	  ip address 192.168.0.13/30
	!
	router rip
	  neighbor 192.168.0.5
	  neighbor 192.168.0.14
	!
	
	}
    }
}

node n3 {
    type router
    model router
    network-config {
	hostname R3
	!
	interface eth3
	 ip address 10.0.2.1/29
	!
	interface eth2
	 ip address 192.168.0.18/30
	!
	interface eth1
	 ip address 192.168.0.21/30
	!
	interface eth0
	 ip address 192.168.0.14/30
	!
    }
    canvas c1
    iconcoords {306.0 499.0}
    labelcoords {302.0 539.0}
    interface-peer {eth0 n2}
    interface-peer {eth1 n9}
    interface-peer {eth2 n4}
    services {RIP zebra DefaultRoute IPForward}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.0.14/30
	!
	interface eth1
	  ip address 192.168.0.21/30
	!
	interface eth2
	  ip address 192.168.0.18/30
	!
	interface eth3
	  ip address 10.0.2.0/29
	!
	router rip
	  neighbor 192.168.0.13
	  neighbor 192.168.0.22
	  neighbor 192.168.0.17
	  network 10.0.2.0/29
	!
	
	}
    }
    interface-peer {eth3 n12}
}

node n4 {
    type router
    model router
    network-config {
	hostname R4
	!
	interface eth2
	 ip address 192.168.0.29/30
	!
	interface eth1
	 ip address 192.168.0.17/30
	!
	interface eth0
	 ip address 192.168.0.10/30
	!
    }
    canvas c1
    iconcoords {415.0 404.0}
    labelcoords {437.0 391.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n3}
    interface-peer {eth2 n10}
    services {RIP zebra DefaultRoute IPForward}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.0.10/30
	!
	interface eth1
	  ip address 192.168.0.17/30
	!
	interface eth2
	  ip address 192.168.0.29/30
	!
	router rip
	  neighbor 192.168.0.9
	  neighbor 192.168.0.18
	  neighbor 192.168.0.30
	!
	
	}
    }
}

node n5 {
    type router
    model router
    network-config {
	hostname R5
	!
	interface eth4
	 ip address 192.168.232.130/24
	!
	interface eth3
	 ip address 10.0.5.1/29
	!
	interface eth2
	 ip address 192.168.0.53/30
	!
	interface eth1
	 ip address 192.168.0.49/30
	!
	interface eth0
	 ip address 192.168.0.1/30
	!
    }
    canvas c1
    iconcoords {475.0 218.0}
    labelcoords {491.0 201.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n6}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 192.168.232.2
	
	
	}
    }
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.0.1/30
	!
	interface eth1
	  ip address 192.168.0.49/30
	!
	interface eth2
	  ip address 192.168.0.53/30
	!
	interface eth3
	  ip address 10.0.5.1/29
	!
	interface eth4
	  ip address 192.168.232.130/24
	!
	router rip
	  neighbor 192.168.0.2
	  neighbor 192.168.0.50
	  neighbor 192.168.0.54
	  network 10.0.5.0/29
	  network 192.168.232.0/24
	!
	
	}
    }
    custom-config {
	custom-config-id service:NAT
	custom-command NAT
	config {
	files=('nat.sh', )
	}
    }
    custom-config {
	custom-config-id service:NAT:nat.sh
	custom-command nat.sh
	config {
	#!/bin/sh
	# generated by security.py
	# NAT out the first interface by default
	# NAT out the eth0 interface
	#iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
	#iptables -A FORWARD -i eth0 -m state --state RELATED,ESTABLISHED -j ACCEPT
	#iptables -A FORWARD -i eth0 -j DROP
	
	#iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE
	#iptables -A FORWARD -i eth1 -m state --state RELATED,ESTABLISHED -j ACCEPT
	#iptables -A FORWARD -i eth1 -j DROP
	#iptables -t nat -A POSTROUTING -o eth2 -j MASQUERADE
	#iptables -A FORWARD -i eth2 -m state --state RELATED,ESTABLISHED -j ACCEPT
	#iptables -A FORWARD -i eth2 -j DROP
	#iptables -t nat -A POSTROUTING -o eth3 -j MASQUERADE
	#iptables -A FORWARD -i eth3 -m state --state RELATED,ESTABLISHED -j ACCEPT
	#iptables -A FORWARD -i eth3 -j DROP
	iptables -t nat -A POSTROUTING -o eth4 -j MASQUERADE
	iptables -A FORWARD -i eth4 -m state --state RELATED,ESTABLISHED -j ACCEPT
	iptables -A FORWARD -i eth4 -j DROP
	
	}
    }
    services {RIP zebra NAT DefaultRoute IPForward}
    interface-peer {eth2 n15}
    interface-peer {eth3 n18}
    interface-peer {eth4 n21}
}

node n6 {
    type router
    model router
    network-config {
	hostname R6
	!
	interface eth4
	 ip address 192.168.0.58/30
	!
	interface eth3
	 ip address 10.0.3.1/29
	!
	interface eth1
	 ip address 192.168.0.50/30
	!
	interface eth2
	 ip address 192.168.0.34/30
	!
	interface eth0
	 ip address 192.168.0.45/30
	!
    }
    canvas c1
    iconcoords {895.0 300.0}
    labelcoords {903.0 282.0}
    interface-peer {eth0 n7}
    interface-peer {eth1 n5}
    interface-peer {eth2 n10}
    services {RIP zebra DefaultRoute IPForward}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 192.168.0.49
	
	}
    }
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.0.45/30
	!
	interface eth1
	  ip address 192.168.0.50/30
	!
	interface eth2
	  ip address 192.168.0.34/30
	!
	interface eth3
	  ip address 10.0.3.1/29
	!
	interface eth4
	  ip address 192.168.0.58/30
	!
	router rip
	  neighbor 192.168.0.57
	  neighbor 192.168.0.49
	  neighbor 192.168.0.33
	  neighbor 192.168.0.46
	  network 10.0.3.0/29
	!
	
	}
    }
    interface-peer {eth3 n13}
    interface-peer {eth4 n15}
}

node n7 {
    type router
    model router
    network-config {
	hostname R7
	!
	interface eth1
	 ip address 192.168.0.46/30
	!
	interface eth0
	 ip address 192.168.0.42/30
	!
    }
    canvas c1
    iconcoords {1002.0 402.0}
    labelcoords {1044.0 412.0}
    interface-peer {eth0 n8}
    interface-peer {eth1 n6}
    services {RIP zebra DefaultRoute IPForward}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 192.168.0.45
	
	}
    }
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.0.42/30
	!
	interface eth1
	  ip address 192.168.0.46/30
	!
	router rip
	  neighbor 192.168.0.41
	  neighbor 192.168.0.45
	!
	
	}
    }
}

node n8 {
    type router
    model router
    network-config {
	hostname R8
	!
	interface eth4
	 ip address 192.168.0.66/30
	!
	interface eth3
	 ip address 10.0.4.1/29
	!
	interface eth2
	 ip address 192.168.0.38/30
	!
	interface eth1
	 ip address 192.168.0.41/30
	!
	interface eth0
	 ip address 192.168.0.26/30
	!
    }
    canvas c1
    iconcoords {909.0 497.0}
    labelcoords {914.0 531.0}
    interface-peer {eth0 n9}
    interface-peer {eth1 n7}
    interface-peer {eth2 n10}
    services {RIP zebra DefaultRoute IPForward}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 192.168.0.42
	
	}
    }
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.0.26/30
	!
	interface eth1
	  ip address 192.168.0.41/30
	!
	interface eth2
	  ip address 192.168.0.38/30
	!
	interface eth3
	  ip address 10.0.4.1/29
	!
	interface eth4
	  ip address 192.168.0.66/30
	!
	router rip
	  neighbor 192.168.0.25
	  neighbor 192.168.0.65
	  neighbor 192.168.0.37
	  neighbor 192.168.0.42
	  network 10.0.4.0/29
	!
	
	}
    }
    interface-peer {eth3 n14}
    interface-peer {eth4 n16}
}

node n9 {
    type router
    model router
    network-config {
	hostname R9
	!
	interface eth3
	 ip address 10.0.7.1/29
	!
	interface eth2
	 ip address 192.168.0.61/30
	!
	interface eth1
	 ip address 192.168.0.25/30
	!
	interface eth0
	 ip address 192.168.0.22/30
	!
    }
    canvas c1
    iconcoords {479.0 605.0}
    labelcoords {479.0 584.0}
    interface-peer {eth0 n3}
    interface-peer {eth1 n8}
    services {RIP zebra DefaultRoute IPForward}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.0.22/30
	!
	interface eth1
	  ip address 192.168.0.25/30
	!
	interface eth2
	  ip address 192.168.0.61/30
	!
	interface eth3
	  ip address 10.0.7.1/29
	!
	router rip
	  neighbor 192.168.0.21
	  neighbor 192.168.0.26
	  neighbor 192.168.0.62
	  network 10.0.7.0/29
	!
	
	}
    }
    interface-peer {eth2 n16}
    interface-peer {eth3 n17}
}

node n10 {
    type router
    model router
    network-config {
	hostname R10
	!
	interface eth2
	 ip address 192.168.0.37/30
	!
	interface eth1
	 ip address 192.168.0.33/30
	!
	interface eth0
	 ip address 192.168.0.30/30
	!
    }
    canvas c1
    iconcoords {798.0 404.0}
    labelcoords {777.0 385.0}
    interface-peer {eth0 n4}
    interface-peer {eth1 n6}
    interface-peer {eth2 n8}
    services {RIP zebra DefaultRoute IPForward}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 192.168.0.34
	
	}
    }
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.0.30/30
	!
	interface eth1
	  ip address 192.168.0.33/30
	!
	interface eth2
	  ip address 192.168.0.37/30
	!
	router rip
	  neighbor 192.168.0.29
	  neighbor 192.168.0.38
	  neighbor 192.168.0.34
	!
	
	}
    }
}

node n11 {
    type router
    model PC
    network-config {
	hostname PC1
	!
	interface eth0
	 ip address 10.0.1.2/29
	!
    }
    canvas c1
    iconcoords {162.0 161.0}
    labelcoords {162.0 193.0}
    interface-peer {eth0 n1}
}

node n12 {
    type router
    model PC
    network-config {
	hostname PC2
	!
	interface eth0
	 ip address 10.0.2.2/29
	!
    }
    canvas c1
    iconcoords {146.0 630.0}
    labelcoords {146.0 662.0}
    interface-peer {eth0 n3}
}

node n13 {
    type router
    model PC
    network-config {
	hostname PC3
	!
	interface eth0
	 ip address 10.0.3.2/29
	!
    }
    canvas c1
    iconcoords {1108.0 170.0}
    labelcoords {1108.0 202.0}
    interface-peer {eth0 n6}
}

node n14 {
    type router
    model PC
    network-config {
	hostname PC4
	!
	interface eth0
	 ip address 10.0.4.2/29
	!
    }
    canvas c1
    iconcoords {1090.0 625.0}
    labelcoords {1090.0 657.0}
    interface-peer {eth0 n8}
}

node n15 {
    type router
    model router
    network-config {
	hostname R11
	!
	interface eth2
	 ip address 10.0.6.1/29
	!
	interface eth0
	 ip address 192.168.0.54/30
	!
	interface eth1
	 ip address 192.168.0.57/30
	!
    }
    canvas c1
    iconcoords {730.0 216.0}
    labelcoords {713.0 203.0}
    interface-peer {eth0 n5}
    interface-peer {eth1 n6}
    interface-peer {eth2 n19}
    services {RIP zebra DefaultRoute IPForward}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.0.54/30
	!
	interface eth1
	  ip address 192.168.0.57/30
	!
	interface eth2
	  ip address 10.0.6.1/29
	!
	router rip
	  neighbor 192.168.0.58
	  neighbor 192.168.0.55
	  network 10.0.6.0/29
	
	!
	
	}
    }
}

node n16 {
    type router
    model router
    network-config {
	hostname R12
	!
	interface eth2
	 ip address 10.0.8.1/29
	!
	interface eth1
	 ip address 192.168.0.65/30
	!
	interface eth0
	 ip address 192.168.0.62/30
	!
    }
    canvas c1
    iconcoords {734.0 605.0}
    labelcoords {715.0 590.0}
    interface-peer {eth0 n9}
    interface-peer {eth1 n8}
    interface-peer {eth2 n20}
    services {RIP zebra DefaultRoute IPForward}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 192.168.0.66
	
	}
    }
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.0.62/30
	!
	interface eth1
	  ip address 192.168.0.65/30
	!
	interface eth2
	  ip address 10.0.8.1/29
	!
	router rip
	  neighbor 192.168.0.66
	  neighbor 192.168.0.61
	  network 10.0.8.0/29
	!
	
	}
    }
}

node n17 {
    type router
    model PC
    network-config {
	hostname PC7
	!
	interface eth0
	 ip address 10.0.7.2/29
	!
    }
    canvas c1
    iconcoords {359.0 752.0}
    labelcoords {359.0 784.0}
    interface-peer {eth0 n9}
}

node n18 {
    type router
    model PC
    network-config {
	hostname PC5
	!
	interface eth0
	 ip address 10.0.5.2/29
	!
    }
    canvas c1
    iconcoords {387.0 68.0}
    labelcoords {387.0 100.0}
    interface-peer {eth0 n5}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.5.1
	
	
	}
    }
    services {DefaultRoute}
}

node n19 {
    type router
    model PC
    network-config {
	hostname PC6
	!
	interface eth0
	 ip address 10.0.6.2/29
	!
    }
    canvas c1
    iconcoords {859.0 77.0}
    labelcoords {859.0 109.0}
    interface-peer {eth0 n15}
}

node n20 {
    type router
    model PC
    network-config {
	hostname PC8
	!
	interface eth0
	 ip address 10.0.8.2/29
	!
    }
    canvas c1
    iconcoords {826.0 757.0}
    labelcoords {826.0 789.0}
    interface-peer {eth0 n16}
}

node n21 {
    type rj45
    network-config {
	hostname ens33
	!
    }
    canvas c1
    iconcoords {594.0 68.0}
    labelcoords {594.0 100.0}
    interface-peer {0 n5}
}

link l1 {
    nodes {n1 n5}
    bandwidth 0
}

link l2 {
    nodes {n1 n2}
    bandwidth 0
}

link l3 {
    nodes {n2 n3}
    bandwidth 0
}

link l4 {
    nodes {n3 n9}
    bandwidth 0
}

link l5 {
    nodes {n9 n8}
    bandwidth 0
}

link l6 {
    nodes {n8 n7}
    bandwidth 0
}

link l7 {
    nodes {n7 n6}
    bandwidth 0
}

link l8 {
    nodes {n6 n5}
    bandwidth 0
}

link l9 {
    nodes {n1 n4}
    bandwidth 0
}

link l10 {
    nodes {n3 n4}
    bandwidth 0
}

link l11 {
    nodes {n4 n10}
    bandwidth 0
}

link l12 {
    nodes {n6 n10}
    bandwidth 0
}

link l13 {
    nodes {n10 n8}
    bandwidth 0
}

link l14 {
    nodes {n11 n1}
    bandwidth 0
}

link l15 {
    nodes {n12 n3}
    bandwidth 0
}

link l16 {
    nodes {n6 n13}
    bandwidth 0
}

link l17 {
    nodes {n8 n14}
    bandwidth 0
}

link l18 {
    nodes {n5 n15}
    bandwidth 0
}

link l19 {
    nodes {n15 n6}
    bandwidth 0
}

link l20 {
    nodes {n9 n16}
    bandwidth 0
}

link l21 {
    nodes {n16 n8}
    bandwidth 0
}

link l22 {
    nodes {n5 n18}
    bandwidth 0
}

link l23 {
    nodes {n9 n17}
    bandwidth 0
}

link l24 {
    nodes {n19 n15}
    bandwidth 0
}

link l25 {
    nodes {n20 n16}
    bandwidth 0
}

link l26 {
    nodes {n5 n21}
}

annotation a3 {
    type text
    iconcoords {623.0 40.0}
    label {}
    canvas c1
}

annotation a4 {
    type text
    iconcoords {623.0 46.0}
    label {}
    canvas c1
}

annotation a7 {
    type text
    iconcoords {529.0 404.0}
    label {}
    canvas c1
}

annotation a1 {
    iconcoords {529.0 317.0}
    type text
    label {Physical Network}
    labelcolor black
    fontfamily {Arial}
    fontsize {16}
    effects {bold}
    canvas c1
}

annotation a2 {
    type text
    iconcoords {677.0 333.0}
    label {}
    canvas c1
}

canvas c1 {
    name {Canvas1}
    refpt {0 0 47.5791667 -122.132322 2.0}
    scale {150.0}
    size {1260 835}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses no
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid no
    traffic_start 0
}

option session {
}

